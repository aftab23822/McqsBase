"use strict";(()=>{var e={};e.id=8499,e.ids=[8499],e.modules={11185:e=>{e.exports=require("mongoose")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},99910:(e,t,s)=>{s.r(t),s.d(t,{originalPathname:()=>g,patchFetch:()=>y,requestAsyncStorage:()=>m,routeModule:()=>d,serverHooks:()=>l,staticGenerationAsyncStorage:()=>p});var r={};s.r(r),s.d(r,{POST:()=>c});var n=s(49303),a=s(88716),i=s(60670),u=s(87070),o=s(23144);async function c(e){try{let t=await e.json(),s=await (0,o.Gq)(t);if(!s.success)return u.NextResponse.json({success:s.success,message:s.message},{status:s.status||400});return u.NextResponse.json(s,{status:201})}catch(e){return console.error("Submit item API error:",e),u.NextResponse.json({success:!1,message:"Internal server error"},{status:500})}}let d=new n.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/submit/route",pathname:"/api/submit",filename:"route",bundlePath:"app/api/submit/route"},resolvedPagePath:"E:\\2.Freelance\\mcqs\\next-js\\app\\api\\submit\\route.js",nextConfigOutput:"",userland:r}),{requestAsyncStorage:m,staticGenerationAsyncStorage:p,serverHooks:l}=d,g="/api/submit/route";function y(){return(0,i.patchFetch)({serverHooks:l,staticGenerationAsyncStorage:p})}},81938:(e,t,s)=>{s.d(t,{Q:()=>i});var r=s(11185);if(!process.env.ADMIN_MONGO_URI&&!process.env.MONGO_URI)throw Error("Please define the ADMIN_MONGO_URI or MONGO_URI environment variable inside .env.local");let n=process.env.ADMIN_MONGO_URI||process.env.MONGO_URI?.replace("/mcqs","/admindb")||"mongodb://localhost:27017/admindb",a=null,i=async()=>{try{return a||(a=await r.createConnection(n,{bufferCommands:!1})),a}catch(e){throw console.error("Admin database connection error:",e),e}}},23144:(e,t,s)=>{s.d(t,{Gm:()=>i,Gq:()=>a,a_:()=>c,cW:()=>o,ql:()=>u});var r=s(81938);async function n(){let e=await (0,r.Q)(),t=new(await Promise.resolve().then(s.t.bind(s,11185,19))).Schema({type:{type:String,required:!0,enum:["simple","pastpaper","interview"]},question:{type:String,required:!0,trim:!0},options:{A:String,B:String,C:String,D:String,E:String},correctAnswer:{type:String,enum:["A","B","C","D","E"]},answer:String,category:String,username:String,position:String,sharedBy:String,year:Number,department:String,experience:String,status:{type:String,enum:["pending","approved","rejected"],default:"pending"},reviewNotes:String,reviewedBy:String,reviewedAt:Date},{timestamps:!0});return t.index({createdAt:-1}),e.models.UserSubmittedItem||e.model("UserSubmittedItem",t)}async function a(e){try{let{type:t,question:s,optionA:r,optionB:a,optionC:i,optionD:u,optionE:o,correctAnswer:c,category:d,username:m,position:p,sharedBy:l,year:g,department:y,experience:w}=e;if(!t||!s)return{success:!1,message:"Type and question are required",status:400};let v={type:t,question:s};if("interview"===t){if(!p||!l||!g||!y)return{success:!1,message:"Position, shared by, year, and department are required for interview submissions",status:400};v={...v,position:p,sharedBy:l,year:parseInt(g),department:y,experience:w||""}}else{if(!r||!a||!i||!u||!c||!d||!m)return{success:!1,message:"All MCQ fields are required",status:400};v={...v,options:{A:r,B:a,C:i,D:u,E:o||""},correctAnswer:c,category:d,username:m}}let f=new(await n())(v);return await f.save(),{success:!0,message:"Submission received successfully! Our team will review it shortly.",data:{id:f._id,type:f.type,status:f.status}}}catch(e){return console.error("Error submitting item:",e),{success:!1,message:"Internal server error. Please try again later.",status:500}}}async function i(e){try{let t=parseInt(e.page)||1,s=parseInt(e.limit)||10,r=e.status,a=e.type,i={};r&&(i.status=r),a&&(i.type=a);let u=await n(),o=await u.countDocuments(i),c=await u.find(i).sort({createdAt:-1}).skip((t-1)*s).limit(s);return{success:!0,data:{results:c,total:o,page:t,totalPages:Math.ceil(o/s)}}}catch(e){return console.error("Error getting submissions:",e),{success:!1,message:"Internal server error",status:500}}}async function u(e){try{let t=await n(),s=await t.findById(e);if(!s)return{success:!1,message:"Submission not found",status:404};return{success:!0,data:s}}catch(e){return console.error("Error getting submission:",e),{success:!1,message:"Internal server error",status:500}}}async function o(e,{status:t,reviewNotes:s,reviewedBy:r}){try{if(!t||!["pending","approved","rejected"].includes(t))return{success:!1,message:"Valid status is required",status:400};let a={status:t,reviewedAt:new Date};s&&(a.reviewNotes=s),r&&(a.reviewedBy=r);let i=await n(),u=await i.findByIdAndUpdate(e,a,{new:!0});if(!u)return{success:!1,message:"Submission not found",status:404};return{success:!0,message:"Submission status updated successfully",data:u}}catch(e){return console.error("Error updating submission status:",e),{success:!1,message:"Internal server error",status:500}}}async function c(){try{let e=await n(),t=await e.aggregate([{$group:{_id:"$status",count:{$sum:1}}}]),s=await e.aggregate([{$group:{_id:"$type",count:{$sum:1}}}]),r=await e.countDocuments(),a=await e.countDocuments({status:"pending"});return{success:!0,data:{total:r,pending:a,statusBreakdown:t,typeBreakdown:s}}}catch(e){return console.error("Error getting submission stats:",e),{success:!1,message:"Internal server error",status:500}}}}};var t=require("../../../webpack-runtime.js");t.C(e);var s=e=>t(t.s=e),r=t.X(0,[9276,5972],()=>s(99910));module.exports=r})();