"use strict";(()=>{var e={};e.id=7616,e.ids=[7616],e.modules={11185:e=>{e.exports=require("mongoose")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},78893:e=>{e.exports=require("buffer")},84770:e=>{e.exports=require("crypto")},76162:e=>{e.exports=require("stream")},21764:e=>{e.exports=require("util")},74677:(e,r,s)=>{s.r(r),s.d(r,{originalPathname:()=>h,patchFetch:()=>w,requestAsyncStorage:()=>p,routeModule:()=>m,serverHooks:()=>g,staticGenerationAsyncStorage:()=>f});var t={};s.r(t),s.d(t,{GET:()=>l});var n=s(49303),a=s(88716),o=s(60670),i=s(87070),u=s(57258),c=s(96064);async function d(e){try{let r=await (0,c.T)(e.user.userId);if(!r.success)return i.NextResponse.json({success:r.success,message:r.message},{status:r.status||400});return i.NextResponse.json(r)}catch(e){return console.error("Admin profile API error:",e),i.NextResponse.json({success:!1,message:"Internal server error"},{status:500})}}let l=(0,u.c2)(d),m=new n.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/admin/profile/route",pathname:"/api/admin/profile",filename:"route",bundlePath:"app/api/admin/profile/route"},resolvedPagePath:"E:\\2.Freelance\\mcqs\\next-js\\app\\api\\admin\\profile\\route.js",nextConfigOutput:"",userland:t}),{requestAsyncStorage:p,staticGenerationAsyncStorage:f,serverHooks:g}=m,h="/api/admin/profile/route";function w(){return(0,o.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:f})}},81938:(e,r,s)=>{s.d(r,{Q:()=>o});var t=s(11185);if(!process.env.ADMIN_MONGO_URI&&!process.env.MONGO_URI)throw Error("Please define the ADMIN_MONGO_URI or MONGO_URI environment variable inside .env.local");let n=process.env.ADMIN_MONGO_URI||process.env.MONGO_URI?.replace("/mcqs","/admindb")||"mongodb://localhost:27017/admindb",a=null,o=async()=>{try{return a||(a=await t.createConnection(n,{bufferCommands:!1})),a}catch(e){throw console.error("Admin database connection error:",e),e}}},96064:(e,r,s)=>{s.d(r,{T:()=>i,cW:()=>o,f5:()=>u});var t=s(41482);s(25163);var n=s(81938);async function a(){let e=await (0,n.Q)(),r=new(await Promise.resolve().then(s.t.bind(s,11185,19))).Schema({username:{type:String,required:!0,unique:!0,trim:!0},password:{type:String,required:!0},role:{type:String,default:"admin",enum:["admin","super_admin"]},email:{type:String,required:!1,unique:!0,sparse:!0},isActive:{type:Boolean,default:!0},lastLogin:{type:Date},permissions:[{type:String,enum:["upload_mcqs","manage_users","review_submissions","manage_categories"]}]},{timestamps:!0});return r.pre("save",async function(e){if(!this.isModified("password"))return e();try{let r=await s.e(2023).then(s.t.bind(s,42023,19)),t=await r.genSalt(10);this.password=await r.hash(this.password,t),e()}catch(r){e(r)}}),r.methods.comparePassword=async function(e){return(await s.e(2023).then(s.t.bind(s,42023,19))).compare(e,this.password)},r.methods.toPublicJSON=function(){return{id:this._id,username:this.username,role:this.role,email:this.email,permissions:this.permissions,lastLogin:this.lastLogin,createdAt:this.createdAt}},e.models.AdminUser||e.model("AdminUser",r)}async function o(e){try{let{username:r,password:s}=e;if(!r||!s)return{success:!1,message:"Username and password are required",status:400};let n=await a(),o=await n.findOne({username:r,isActive:!0});if(!o||!await o.comparePassword(s))return{success:!1,message:"Invalid credentials",status:401};o.lastLogin=new Date,await o.save();let i=t.sign({userId:o._id,username:o.username,role:o.role,permissions:o.permissions},process.env.JWT_SECRET,{expiresIn:"24h"});return{success:!0,message:"Login successful",token:i,user:o.toPublicJSON()}}catch(e){return console.error("Login error:",e),{success:!1,message:"Internal server error",status:500}}}async function i(e){try{let r=await a(),s=await r.findById(e);if(!s)return{success:!1,message:"Admin user not found",status:404};return{success:!0,data:s.toPublicJSON()}}catch(e){return console.error("Get profile error:",e),{success:!1,message:"Internal server error",status:500}}}async function u(e,{currentPassword:r,newPassword:s}){try{if(!r||!s)return{success:!1,message:"Current password and new password are required",status:400};let t=await a(),n=await t.findById(e);if(!n)return{success:!1,message:"Admin user not found",status:404};if(!await n.comparePassword(r))return{success:!1,message:"Current password is incorrect",status:400};return n.password=s,await n.save(),{success:!0,message:"Password changed successfully"}}catch(e){return console.error("Change password error:",e),{success:!1,message:"Internal server error",status:500}}}},57258:(e,r,s)=>{s.d(r,{c2:()=>a});var t=s(41482),n=s(87070);function a(e){return async(r,s)=>{let a=function(e){let r=e.headers.get("authorization");if(!r||!r.startsWith("Bearer "))return{error:{message:"No token provided"},status:401};let s=r.split(" ")[1];try{let e=t.verify(s,process.env.JWT_SECRET);if("admin"!==e.role)return{error:{message:"Forbidden: Admins only"},status:403};return{user:e}}catch(e){return{error:{message:"Invalid or expired token"},status:401}}}(r);return a.error?n.NextResponse.json(a.error,{status:a.status}):(r.user=a.user,e(r,s))}}},25163:(e,r,s)=>{s.d(r,{Z:()=>o});var t=s(11185);if(!process.env.MONGO_URI)throw Error("Please define the MONGO_URI environment variable inside .env.local");let n=process.env.MONGO_URI,a=global.mongoose;a||(a=global.mongoose={conn:null,promise:null});let o=async function(){if(a.conn)return a.conn;a.promise||(a.promise=t.connect(n,{bufferCommands:!1}).then(e=>e));try{a.conn=await a.promise}catch(e){throw a.promise=null,e}return a.conn}}};var r=require("../../../../webpack-runtime.js");r.C(e);var s=e=>r(r.s=e),t=r.X(0,[9276,5972,1482],()=>s(74677));module.exports=t})();