"use strict";(()=>{var e={};e.id=8203,e.ids=[8203],e.modules={11185:e=>{e.exports=require("mongoose")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},64680:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>g,patchFetch:()=>v,requestAsyncStorage:()=>l,routeModule:()=>d,serverHooks:()=>m,staticGenerationAsyncStorage:()=>y});var n={};r.r(n),r.d(n,{GET:()=>p});var o=r(49303),i=r(88716),a=r(60670),s=r(87070),c=r(25163),u=r(48412);async function p(e){try{await (0,c.Z)();let{searchParams:t}=new URL(e.url),r=parseInt(t.get("page"))||1,n=parseInt(t.get("limit"))||10,o={title:{$regex:/everyday-science/i}},i=await u.Z.countDocuments(o),a=await u.Z.find(o).sort({createdAt:-1,_id:-1}).skip((r-1)*n).limit(n).populate("questions").populate("categoryId");return s.NextResponse.json({results:a,total:i,page:r,totalPages:Math.ceil(i/n)})}catch(e){return console.error("Everyday Science Quiz API error:",e),s.NextResponse.json({error:"Failed to fetch Everyday Science quizzes"},{status:500})}}let d=new o.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/quiz/everyday-science/route",pathname:"/api/quiz/everyday-science",filename:"route",bundlePath:"app/api/quiz/everyday-science/route"},resolvedPagePath:"E:\\2.Freelance\\mcqs\\next-js\\app\\api\\quiz\\everyday-science\\route.js",nextConfigOutput:"",userland:n}),{requestAsyncStorage:l,staticGenerationAsyncStorage:y,serverHooks:m}=d,g="/api/quiz/everyday-science/route";function v(){return(0,a.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:y})}},48412:(e,t,r)=>{r.d(t,{Z:()=>i});var n=r(11185);let o=new n.Schema({title:{type:String,required:!0},description:{type:String},questions:[{type:n.Schema.Types.ObjectId,ref:"MCQ"}],categoryId:{type:n.Schema.Types.ObjectId,ref:"Category"},subcategoryId:{type:n.Schema.Types.ObjectId,ref:"Subcategory"}},{timestamps:!0}),i=n.models.Quiz||n.model("Quiz",o)},25163:(e,t,r)=>{r.d(t,{Z:()=>a});var n=r(11185);if(!process.env.MONGO_URI)throw Error("Please define the MONGO_URI environment variable inside .env.local");let o=process.env.MONGO_URI,i=global.mongoose;i||(i=global.mongoose={conn:null,promise:null});let a=async function(){if(i.conn)return i.conn;i.promise||(i.promise=n.connect(o,{bufferCommands:!1}).then(e=>e));try{i.conn=await i.promise}catch(e){throw i.promise=null,e}return i.conn}}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),n=t.X(0,[9276,5972],()=>r(64680));module.exports=n})();